// Copyright 2009 Mark Leone (markleone@gmail.com).  All rights reserved.
// Licensed under the terms of the MIT License.
// See http://www.opensource.org/licenses/mit-license.php.

#ifndef OPCODE_H
#define OPCODE_H

/// Instruction opcodes.  Unknown instructions are represented by
/// kOpcode_Unknown.
enum Opcode {
    kOpcode_Unknown = 0,       // Unkown must be zero.
    kOpcode_Abs,
    kOpcode_Acos,
    kOpcode_Add,
    kOpcode_Ambient,
    kOpcode_And,
    kOpcode_Area,
    kOpcode_ArrayAssign,
    kOpcode_ArrayAssignComp,
    kOpcode_ArrayAssignMxComp,
    kOpcode_ArrayInit,
    kOpcode_ArrayLength,
    kOpcode_ArrayRef,
    kOpcode_Asin,
    kOpcode_Assign,
    kOpcode_AssignMatrix,
    kOpcode_Atan,
    kOpcode_Atmosphere,
    kOpcode_Attribute,
    kOpcode_Bake3D,
    kOpcode_Break,
    kOpcode_CTransform,
    kOpcode_CalculateNormal,
    kOpcode_CallDSO,
    kOpcode_Capacity,
    kOpcode_Caustic,
    kOpcode_Ceil,
    kOpcode_CellNoise,
    kOpcode_Clamp,
    kOpcode_Color,
    kOpcode_ColorTransform,
    kOpcode_Comp,
    kOpcode_Concat,
    kOpcode_Continue,
    kOpcode_Cos,
    kOpcode_Cross,
    kOpcode_Degrees,
    kOpcode_Depth,
    kOpcode_Deriv,
    kOpcode_Determinant,
    kOpcode_Diffuse,
    kOpcode_Displacement,
    kOpcode_Distance,
    kOpcode_Divide,
    kOpcode_Dot,
    kOpcode_Du,
    kOpcode_Dv,
    kOpcode_EQ,
    kOpcode_EnterProc,
    kOpcode_Environment,
    kOpcode_Erf,
    kOpcode_Erfc,
    kOpcode_Exp,
    kOpcode_FaceForward,
    kOpcode_FilterStep,
    kOpcode_Floor,
    kOpcode_For,
    kOpcode_Format,
    kOpcode_Fresnel,
    kOpcode_FuncCall,
    kOpcode_GE,
    kOpcode_GT,
    kOpcode_Gather,
    kOpcode_GeoNormals,
    kOpcode_GetLight,
    kOpcode_GetLights,
    kOpcode_GetShader,
    kOpcode_GetShaders,
    kOpcode_GetVar,
    kOpcode_HasMethod,
    kOpcode_If,
    kOpcode_Illuminance,
    kOpcode_Illuminate,
    kOpcode_Incident,
    kOpcode_IndirectDiffuse,
    kOpcode_InverseSqrt,
    kOpcode_LE,
    kOpcode_LT,
    kOpcode_Length,
    kOpcode_LightSource,
    kOpcode_LightingStart,
    kOpcode_Log,
    kOpcode_MTransform,
    kOpcode_MTransformMx,
    kOpcode_Match,
    kOpcode_Matrix,
    kOpcode_MatrixTransform,
    kOpcode_Max,
    kOpcode_Min,
    kOpcode_Mix,
    kOpcode_Mod,
    kOpcode_Multiply,
    kOpcode_MxComp,
    kOpcode_MxRotate,
    kOpcode_MxScale,
    kOpcode_MxSetComp,
    kOpcode_MxTranslate,
    kOpcode_NE,
    kOpcode_NPreChg,
    kOpcode_NTransform,
    kOpcode_NTransformMx,
    kOpcode_NeedSurface,
    kOpcode_Negate,
    kOpcode_Noise,
    kOpcode_Normalize,
    kOpcode_Occlusion,
    kOpcode_Opposite,
    kOpcode_Option,
    kOpcode_Or,
    kOpcode_PNoise,
    kOpcode_PPreChg,
    kOpcode_Phong,
    kOpcode_PhotonMap,
    kOpcode_Point,
    kOpcode_PointTransform,
    kOpcode_Pop,
    kOpcode_Pow,
    kOpcode_Print,
    kOpcode_Printf,
    kOpcode_Push,
    kOpcode_Radians,
    kOpcode_Random,
    kOpcode_RayInfo,
    kOpcode_Reflect,
    kOpcode_Refract,
    kOpcode_RendererInfo,
    kOpcode_Reserve,
    kOpcode_Resize,
    kOpcode_Return,
    kOpcode_Rotate,
    kOpcode_Round,
    kOpcode_Scale,
    kOpcode_SetComp,
    kOpcode_SetXComp,
    kOpcode_SetYComp,
    kOpcode_SetZComp,
    kOpcode_ShaderName,
    kOpcode_Shadow,
    kOpcode_Sign,
    kOpcode_Sin,
    kOpcode_SmoothStep,
    kOpcode_Solar,
    kOpcode_Specular,
    kOpcode_SpecularBrdf,
    kOpcode_Spline,
    kOpcode_Sqrt,
    kOpcode_Step,
    kOpcode_SubSurface,
    kOpcode_Subtract,
    kOpcode_Surface,
    kOpcode_Tan,
    kOpcode_Texture,
    kOpcode_Texture3D,
    kOpcode_TextureInfo,
    kOpcode_Trace,
    kOpcode_Transform,
    kOpcode_TransformMx,
    kOpcode_Transmission,
    kOpcode_VTransform,
    kOpcode_VTransformMx,
    kOpcode_VectorTransform,
    kOpcode_WNoise,
    kOpcode_While,
    kOpcode_XComp,
    kOpcode_YComp,
    kOpcode_ZComp,
    kOpcode_NumInsts,
};

/* TODO: add the following:

*/


/// Get the name of an opcode, which must not be kOpcode_Unknown.
const char* OpcodeName(Opcode opcode);

#endif // ndef OPCODE_H
